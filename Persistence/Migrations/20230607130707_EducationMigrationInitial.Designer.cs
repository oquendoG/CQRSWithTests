// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230607130707_EducationMigrationInitial")]
    partial class EducationMigrationInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c21902a-2bb4-4ab3-8281-783fb9a53cde"),
                            CreationDate = new DateTime(2023, 6, 7, 8, 7, 6, 984, DateTimeKind.Local).AddTicks(5444),
                            Description = "Basic C# course",
                            Price = 56m,
                            PublicationDate = new DateTime(2025, 6, 7, 8, 7, 6, 984, DateTimeKind.Local).AddTicks(5465),
                            Title = "C# from zero to hero"
                        },
                        new
                        {
                            Id = new Guid("3feff5f0-64fb-4ba4-9686-4f01cf43476c"),
                            CreationDate = new DateTime(2023, 6, 7, 8, 7, 6, 984, DateTimeKind.Local).AddTicks(5553),
                            Description = "Basic Java course",
                            Price = 46m,
                            PublicationDate = new DateTime(2024, 6, 7, 8, 7, 6, 984, DateTimeKind.Local).AddTicks(5555),
                            Title = "Java from zero to hero"
                        },
                        new
                        {
                            Id = new Guid("c2c5352d-e4fe-4038-826c-5d2cef00fe35"),
                            CreationDate = new DateTime(2023, 6, 7, 8, 7, 6, 984, DateTimeKind.Local).AddTicks(5596),
                            Description = "Basic unit testing course for .NET",
                            Price = 35m,
                            PublicationDate = new DateTime(2025, 6, 7, 8, 7, 6, 984, DateTimeKind.Local).AddTicks(5598),
                            Title = "XUnit from zero to hero"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
